########
# Model:

model: gpt-4o

# Model for editing code
editor-model: gpt-4o

# For API calls
timeout: 20

edit-format: whole

# Specify model-specific settings
model-settings-file: .aider.model.settings.yml

show-model-warnings: false

alias:
  - "mixtral:ollama_chat/mixtral:8x7b"
  - "code:ollama_chat/qwen2.5-coder:14b"
  - "llama:ollama_chat/llama3.2:latest"

########
# Cache:

# Enable caching to reduce token costs (default: false)
cache-prompts: true

# Number of pings to keep the prompt cache alive at 5-minute intervals (default: 0)
cache-keepalive-pings: 5

##########
# Repomap:

# Suggested number of tokens to use for repo map, use 0 to disable (default: 1024)
map-tokens: 0

# Control how often the repo map is refreshed. Options: auto, always, files, manual (default: auto)
map-refresh: manual

#########
# Output:

# Enable dark mode for a better terminal appearance on dark backgrounds
dark-mode: true

# Enable pretty, colorized output (default: true)
pretty: true

stream: true

# Show diffs when committing change (default: False)
show-diffs: true

code-theme: monokai

######
# Git:

git: true

# Disable automatic commits after changes made by the AI
auto-commits: false

# Prevent the AI from suggesting shell commands during chats
no-suggest-shell-commands: false

# Add .aider* to .gitignore
gitignore: true

dry-run: false

watch-files: false

commit-prompt: |
  You are an expert software engineer that generates concise, one-line Git commit messages based on the provided diffs.
  Review the provided context and diffs which are about to be committed to a git repo.
  Review the diffs carefully.
  Generate a one-line commit message for those changes.
  The commit message should be structured as follows: <type>: <description>
  Use these for <type>: fix, feat, build, chore, ci, docs, style, refactor, perf, test

  Ensure the commit message:
  1. Starts with the appropriate prefix.
  2. Is in the imperative mood (e.g., "add feature" not "added feature" or "adding feature").
  3. Does not exceed 72 characters.

########################
# Fixing and committing:

# Automatically lints code after changes
auto-lint: true

lint-cmd: "python: ruff ."

# Automatically runs tests after code changes
auto-test: false

############
# Analytics:

analytics: true

# Control verbosity of the output (default: false)
verbose: false

########
# Modes:

# Set to true to debug
show-repo-map: false
show-prompts: false

########
# Other:

# Enable completion suggestions for shell commands
suggest-shell-commands: true
editor: "code --wait"
